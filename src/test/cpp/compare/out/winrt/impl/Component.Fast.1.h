// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.000000.0
#pragma once
#include "winrt/impl/Component.Fast.0.h"
namespace winrt::Component::Fast
{
    struct WINRT_EBO IFastClass :
        Windows::Foundation::IInspectable,
        impl::consume_t<IFastClass>
    {
        IFastClass(std::nullptr_t = nullptr) noexcept {}
        IFastClass(construct_from_abi_t, void* ptr) noexcept : Windows::Foundation::IInspectable(construct_from_abi, ptr) {}
    };
    struct WINRT_EBO IFastClass2 :
        Windows::Foundation::IInspectable,
        impl::consume_t<IFastClass2>
    {
        IFastClass2(std::nullptr_t = nullptr) noexcept {}
        IFastClass2(construct_from_abi_t, void* ptr) noexcept : Windows::Foundation::IInspectable(construct_from_abi, ptr) {}
    };
    struct WINRT_EBO INotExclusive :
        Windows::Foundation::IInspectable,
        impl::consume_t<INotExclusive>
    {
        INotExclusive(std::nullptr_t = nullptr) noexcept {}
        INotExclusive(construct_from_abi_t, void* ptr) noexcept : Windows::Foundation::IInspectable(construct_from_abi, ptr) {}
    };
}
namespace winrt
{
}
