namespace Component
{
    namespace OneEnum
    {
        enum Signed
        {
            First = -1,
            Second = 0,
            Third = 1
        };
    }

    namespace TwoEnum
    {
        enum Signed
        {
            First = -1,
            Second = 0,
            Third = 1
        };

        [flags]
        enum Unsigned
        {
            First = 0,
            Second = 1,
            Third = 2
        };
    }

    namespace ThreeEnum
    {
        enum Signed
        {
            First = -1,
            Second = 0,
            Third = 1
        };

        [flags]
        enum Unsigned
        {
            First = 0,
            Second = 1,
            Third = 2
        };

        enum Another
        {
            First = -1,
            Second = 0,
            Third = 1
        };
    }

    namespace Edge
    {
        [default_interface]
        runtimeclass EmptyClass
        {
        }

        static runtimeclass StaticClass
        {
            static void StaticMethod();
        }

        runtimeclass ZeroClass
        {
            ZeroClass();
            void Method();
            static void StaticMethod();
        }

        runtimeclass OneClass
        {
            OneClass(Int32 a);
            void Method(Int32 a);
            static void StaticMethod(Int32 a);

            Int32 First();
        }

        runtimeclass TwoClass
        {
            TwoClass(Int32 a, Int32 b);
            void Method(Int32 a, Int32 b);
            static void StaticMethod(Int32 a, Int32 b);

            Int32 First();
            Int32 Second();
        }

        runtimeclass ThreeClass
        {
            ThreeClass(Int32 a, Int32 b, Int32 c);
            void Method(Int32 a, Int32 b, Int32 c);
            static void StaticMethod(Int32 a, Int32 b, Int32 c);

            Int32 First();
            Int32 Second();
            Int32 Third();
        }
    }

    namespace Fast
    {
        [exclusiveto(FastClass)]
        interface IFastClass
        {
            String First();
            String Second();
        }

        [exclusiveto(FastClass)]
        interface IFastClass2
        {
            String Third();
            String Fourth();
        }

        [exclusiveto(SlowClass)]
        interface ISlowClass
        {
            String First();
            String Second();
        }

        [exclusiveto(SlowClass)]
        interface ISlowClass2
        {
            String Third();
            String Fourth();
        }

        interface INotExclusive
        {
            String NotExclusive();
        }

        runtimeclass SlowClass : [default] ISlowClass, ISlowClass2, INotExclusive
        {
            SlowClass();
            static void StaticMethod();
        }

        [Windows.Foundation.Metadata.FastAbiAttribute]
        runtimeclass FastClass : [default] IFastClass, IFastClass2, INotExclusive
        {
            FastClass();
            static void StaticMethod();
        }
    }
}
